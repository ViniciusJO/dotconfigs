[module/xbacklight]
type = internal/xbacklight

format = <bar><label>
format-padding = 1
format-prefix = %{T7}%{T-}
format-prefix-foreground = ${colors.fg}
label = "%percentage%%"
label-foreground = ${colors.fg} 
bar-width = 10
bar-indicator = |
bar-fill = ─
bar-empty = ─

[module/backlight]
type = custom/script

; export CYAN='\033[0;36m'     
; export NC='\033[0m' # No Color
; Available tokens:
;   %counter%
; Command to be executed (using "/bin/sh -c [command]")
exec = . "$HOME/.scripts/brightness/changeBrightness.sh" get_with_padding

; Conditional command that, if defined, needs to exit successfully
; before the main exec command is invoked.
; Default: ""
exec-if = brightnessctl i

format = <label>
format-foreground = ${colors.blue}
label = %{T2} %output%%%{T-}

; Set this to true for scripts that continuously produce output
; If set to 'true', everytime the script produces a new line of output, the module updates.
; Otherwise, only the first line of output is considered and all later lines are discarded.
; Default: false
tail = false

; Seconds to sleep between updates
; Default: 5 (0 if `tail = true`)
interval = 0


; Available tokens:
;   %counter%
;   %pid%
;
; "click-(left|middle|right)" will be executed using "/bin/sh -c [command]"
; click-left = echo left %counter%
; click-middle = echo middle %counter%
; click-right = echo right %counter%
; double-click-left = echo double left %counter%
; double-click-middle = echo double middle %counter%
; double-click-right = echo double right %counter%

; Available tokens:
;   %counter%
;   %pid%
;
; "scroll-(up|down)" will be executed using "/bin/sh -c [command]"
scroll-up = . "$HOME/.scripts/brightness/changeBrightness.sh" increase
scroll-down = . "$HOME/.scripts/brightness/changeBrightness.sh" decrease




; type = internal/backlight

; Use the following command to list available cards:
; $ ls -1 /sys/class/backlight/
; card = intel_backlight

; Enable changing the backlight with the scroll wheel
; NOTE: This may require additional configuration on some systems. Polybar will
; write to `/sys/class/backlight/${self.card}/brightness` which requires polybar
; to have write access to that file.
; DO NOT RUN POLYBAR AS ROOT. 
; The recommended way is to add the user to the
; `video` group and give that group write-privileges for the `brightness` file.
; See the ArchWiki for more information:
; https://wiki.archlinux.org/index.php/Backlight#ACPI
; Default: false
; enable-scroll = true

; Available tags:
;   <label> (default)
;   <ramp>
;   <bar>
; format = <label>
; format-foreground = ${colors.blue}
; Available tokens:
;   %percentage% (default)
; label = %{T2} %percentage%%%{T-}

; label-discharging = %{T1}%{T-} %{T2}%percentage%%%{T-}
; label-discharging-foreground = ${colors.blue}

; Available tokens:
;   %percentage% (default) - is set to 100 if full-at is reached
;   %percentage_raw%
; label-full = %{T1}%{T-} %{T2}Full!%{T-}
; label-full-foreground = ${colors.blue}
